plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id "com.gradle.plugin-publish" version "0.12.0"
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'signing'
}

def kotlinVersion = "1.3.72"

repositories {
    jcenter()
}

def versionName = '1.1'
def groupName = "com.a65apps.changelog"

version = versionName
group = groupName

test {
    useJUnitPlatform {
        includeEngines 'spek2'
    }
}

dependencies {
    compileOnly gradleApi()
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation 'org.ajoberstar.grgit:grgit-core:4.0.2'
    implementation 'com.github.spullara.mustache.java:compiler:0.9.6'

    testImplementation "io.mockk:mockk:1.10.0"
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:2.0.12"
    testRuntimeOnly "org.spekframework.spek2:spek-runner-junit5:2.0.12"
    testRuntimeOnly "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
}

gradlePlugin {
    plugins {
        changelog {
            id = 'com.a65apps.changelog'
            implementationClass = 'com.a65apps.changelog.ChangelogPlugin'
        }
    }
}

def pluginDescription = 'Plugin for automatic generation of changelog from git repository'
def pluginUrl = 'https://github.com/goblinr/git-changelog-gradle-plugin'
def pluginVcsUrl = 'https://github.com/goblinr/git-changelog-gradle-plugin.git'

pluginBundle {
    website = pluginUrl
    vcsUrl = pluginVcsUrl
    description = pluginDescription
    tags = ['changelog', 'git']

    plugins {
        changelog {
            displayName = 'Git Changelog Gradle Plugin'
        }
    }
}

publishing {
    publications {
        gpr(MavenPublication) {
            groupId = groupName
            artifactId = 'git-changelog'
            version = versionName
            from components.java

            pom {
                name = 'Git changelog gradle plugin'
                description = pluginDescription
                url = pluginUrl
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/goblinr/git-changelog-gradle-plugin/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'goblinr'
                        name = 'Roman Romanov'
                        email = 'rromanov@65apps.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/goblinr/git-changelog-gradle-plugin.git'
                    developerConnection = 'scm:git:ssh://github.com/goblinr/git-changelog-gradle-plugin.git'
                    url = pluginUrl
                }
            }
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = 'https://maven.pkg.github.com/goblinr/git-changelog-gradle-plugin'

            def properties = localProperties()
            def user = properties.getProperty('gpr.user')
            def key = properties.getProperty('gpr.key')
            credentials {
                username = user ?: System.getenv("USERNAME")
                password = key ?: System.getenv("TOKEN")
            }
        }
    }
}

signing {
    def properties = localProperties()
    def signingKeyId = properties.getProperty('sign.keyId') ?: System.getenv("SIGN_KEY_ID")
    def signingKey = properties.getProperty('sign.key') ?: System.getenv("SIGN_KEY")
    def signingPassword = properties.getProperty('sign.password') ?: System.getenv("SIGN_PASSWORD")
    useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
    sign publishing.publications.gpr
}

Properties localProperties() {
    Properties properties = new Properties()
    def file = project.file('local.properties')
    if (!file.exists()) {
        return properties
    }

    properties.load(file.newDataInputStream())
    return properties
}
